# -*- coding: utf-8 -*-
"""eye_tracking_data_cleaning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mJy3DK4egrtJUG6PLZ_VXsgsTWWGvp5z
"""

import pandas as pd
from datetime import datetime
from datetime import time
participant1_file_path = '/content/participants_dataset/Participant_01.csv'
participant2_file_path = '/content/participants_dataset/Participant_02.csv'
participant3_file_path = '/content/participants_dataset/Participant_03.csv'
participant4_file_path = '/content/participants_dataset/Participant_04.csv'
participant5_file_path = '/content/participants_dataset/Participant_05.csv'

participants_time = '/content/participants_dataset/Participant_Exp_Timestamp.xlsx'

from datetime import datetime
now = datetime.now()
dt = datetime.timestamp(now)
print(dt)

timestamp_path = '/content/participants_dataset/Participant_Exp_Timestamp.xlsx'
pt_df = pd.read_excel(timestamp_path)

pt_df

output_path_base = '/content/participants_dataset/output_folder/'
base_path = '/content/participants_dataset/'
file_names = ['Participant_01.csv', 'Participant_02.csv', 'Participant_03.csv', 'Participant_04.csv', 'Participant_05.csv']

# def evaluate_total_seconds(time_object):
#   total_seconds = time_object.hour * 3600 + time_object.minute * 60 + time_object.second + time_object.microsecond / 1e6
#   return total_seconds

def evaluate_total_seconds(sec):
  hour, minute, sec = str(sec).split(':')

  total_seconds = float(hour) * 3600 + float(minute) * 60 + float(sec)
  print(total_seconds)
  return total_seconds

for file_name in file_names:
  column_header = (file_name.split('.')[0]).replace('_0', ' ')
  slides_start, slides_end = pt_df.loc[1, column_header], pt_df.loc[2, column_header]
  begin_slide = evaluate_total_seconds(slides_start)
  end_slide = evaluate_total_seconds(slides_end)
  file_path = base_path + file_name
  df = pd.read_csv(file_path)
  # print(df.shape)
  df['timeSeconds'] = (df['timestamp (us)'] - df['timestamp (us)'].iloc[0]) / 1000000
  df = df.loc[df['validity'] == 1]
  # print(df.shape)
  df = df.loc[(df.timeSeconds > begin_slide) & (df.timeSeconds <= end_slide)]
  # print(df.shape)
  df.to_csv(output_path_base + 'cleaned_' + file_name)

cdf = pd.read_csv('/content/participants_dataset/output_folder/cleaned_Participant_01.csv')
cdf.tail()

bdf = pd.read_csv('/content/participants_dataset/Participant_01.csv')
bdf.tail()

